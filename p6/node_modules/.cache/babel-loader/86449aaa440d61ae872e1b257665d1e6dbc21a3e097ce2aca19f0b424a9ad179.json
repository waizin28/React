{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BadgerApp() {\n  _s();\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    return /*#__PURE__*/_jsxDEV(Route, {\n      children: navigate(\"/\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  };\n  useEffect(() => {\n    fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => {\n      console.log(\"Inside whoami : \" + res.status);\n      if (res.status === 200) {\n        handleLogin();\n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n  }, [isLoggedIn, setIsLoggedIn]);\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => res.json()).then(json => {\n      setChatrooms(json);\n    });\n  }, []);\n\n  // const handleLogout = () => {\n  //   setIsLoggedIn(false);\n  //   navigate(\"/\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(isLoggedInContext.Provider, {\n    value: isLoggedIn,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BadgerLayout, {\n            chatrooms: chatrooms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 36\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(BadgerChatHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(BadgerLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(BadgerRegister, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(BadgerLogout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), chatrooms.map(chatroom => {\n            return /*#__PURE__*/_jsxDEV(Route, {\n              path: `chatrooms/${chatroom}`,\n              element: /*#__PURE__*/_jsxDEV(BadgerChatroom, {\n                name: chatroom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 28\n              }, this)\n            }, chatroom, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(BadgerNoMatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(BadgerApp, \"2FdAhA73YK3LyaoV8MR+i/IVh4s=\", false, function () {\n  return [useNavigate];\n});\n_c = BadgerApp;\nexport default BadgerApp;\nvar _c;\n$RefreshReg$(_c, \"BadgerApp\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Route","Routes","useNavigate","BadgerLayout","BadgerLogin","BadgerRegister","BadgerLogout","BadgerChatroom","BadgerChatHome","BadgerNoMatch","isLoggedInContext","jsxDEV","_jsxDEV","BadgerApp","_s","chatrooms","setChatrooms","isLoggedIn","setIsLoggedIn","navigate","handleLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","fetch","credentials","headers","then","res","console","log","status","json","Provider","value","path","element","index","map","chatroom","name","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\n\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\n\nfunction BadgerApp() {\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    return <Route>{navigate(\"/\")}</Route>;\n  };\n\n  useEffect(() => {\n    fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    }).then((res) => {\n      console.log(\"Inside whoami : \" + res.status);\n      if (res.status === 200) {\n        handleLogin();\n      } else {\n        setIsLoggedIn(false);\n      }\n    });\n  }, [isLoggedIn, setIsLoggedIn]);\n\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setChatrooms(json);\n      });\n  }, []);\n\n  // const handleLogout = () => {\n  //   setIsLoggedIn(false);\n  //   navigate(\"/\");\n  // };\n\n  return (\n    <isLoggedInContext.Provider value={isLoggedIn}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<BadgerLayout chatrooms={chatrooms} />}>\n            <Route index element={<BadgerChatHome />} />\n\n            <Route path=\"/login\" element={<BadgerLogin />}></Route>\n            <Route path=\"/register\" element={<BadgerRegister />}></Route>\n\n            <Route path=\"/logout\" element={<BadgerLogout />}></Route>\n\n            {chatrooms.map((chatroom) => {\n              return (\n                <Route\n                  key={chatroom}\n                  path={`chatrooms/${chatroom}`}\n                  element={<BadgerChatroom name={chatroom} />}\n                />\n              );\n            })}\n            <Route path=\"*\" element={<BadgerNoMatch />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </isLoggedInContext.Provider>\n  );\n}\n\nexport default BadgerApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}