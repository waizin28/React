{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/content/BadgerMessage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport privateIdContext from \"../../contexts/privateIdContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction BadgerMessage(props) {\n  _s();\n  const dt = new Date(props.created);\n  const {\n    privateId,\n    setPrivateId\n  } = useContext(privateIdContext);\n  console.log(JSON.stringify(privateId));\n  console.log(\"printing out private Id\" + privateId);\n  console.log(\"Type of private Id \" + typeof privateId);\n  console.log(\"Type of props Id \" + typeof props.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"sub\", {\n      children: [\"Posted on \", dt.toLocaleDateString(), \" at \", dt.toLocaleTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      children: props.poster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), JSON.stringify(privateId).includes(props.id) ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"danger\",\n      type: \"submit\",\n      children: \"Delete Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n_s(BadgerMessage, \"FM8z73c35h03wuY2dnAuvzrkXJU=\");\n_c = BadgerMessage;\nexport default BadgerMessage;\nvar _c;\n$RefreshReg$(_c, \"BadgerMessage\");","map":{"version":3,"names":["React","Form","Button","useContext","privateIdContext","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerMessage","props","_s","dt","Date","created","privateId","setPrivateId","console","log","JSON","stringify","id","children","title","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","toLocaleTimeString","poster","content","includes","variant","type","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/content/BadgerMessage.js"],"sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useContext } from \"react\";\nimport privateIdContext from \"../../contexts/privateIdContext\";\n\nfunction BadgerMessage(props) {\n  const dt = new Date(props.created);\n  const { privateId, setPrivateId } = useContext(privateIdContext);\n\n  console.log(JSON.stringify(privateId));\n  console.log(\"printing out private Id\" + privateId);\n  console.log(\"Type of private Id \" + typeof privateId);\n  console.log(\"Type of props Id \" + typeof props.id);\n\n  return (\n    <>\n      <h2>{props.title}</h2>\n      <sub>\n        Posted on {dt.toLocaleDateString()} at {dt.toLocaleTimeString()}\n      </sub>\n      <br />\n      <br />\n      <i>{props.poster}</i>\n      <p>{props.content}</p>\n      {JSON.stringify(privateId).includes(props.id) ? (\n        <Button variant=\"danger\" type=\"submit\">\n          Delete Post\n        </Button>\n      ) : null}\n    </>\n  );\n}\n\nexport default BadgerMessage;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,gBAAgB,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAMC,EAAE,GAAG,IAAIC,IAAI,CAACH,KAAK,CAACI,OAAO,CAAC;EAClC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACC,gBAAgB,CAAC;EAEhEa,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;EACtCE,OAAO,CAACC,GAAG,CAAC,yBAAyB,GAAGH,SAAS,CAAC;EAClDE,OAAO,CAACC,GAAG,CAAC,qBAAqB,GAAG,OAAOH,SAAS,CAAC;EACrDE,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAG,OAAOR,KAAK,CAACW,EAAE,CAAC;EAElD,oBACEf,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAKZ,KAAK,CAACa;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBrB,OAAA;MAAAgB,QAAA,GAAK,YACO,EAACV,EAAE,CAACgB,kBAAkB,EAAE,EAAC,MAAI,EAAChB,EAAE,CAACiB,kBAAkB,EAAE;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D,eACNrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA;MAAAgB,QAAA,EAAIZ,KAAK,CAACoB;IAAM;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACrBrB,OAAA;MAAAgB,QAAA,EAAIZ,KAAK,CAACqB;IAAO;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EACrBR,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAACiB,QAAQ,CAACtB,KAAK,CAACW,EAAE,CAAC,gBAC3Cf,OAAA,CAACJ,MAAM;MAAC+B,OAAO,EAAC,QAAQ;MAACC,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAEvC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,GACP,IAAI;EAAA,gBACP;AAEP;AAAChB,EAAA,CA1BQF,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA4BtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}