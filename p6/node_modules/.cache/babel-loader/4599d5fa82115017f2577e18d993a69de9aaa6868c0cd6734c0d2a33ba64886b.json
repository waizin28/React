{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/content/BadgerChatroom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport BadgerMessage from \"./BadgerMessage\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerChatroom(props) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(isLoggedInContext);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n  const loadMessages = () => {\n    fetch(`https://cs571.org/s23/hw6/api/chatroom/${props.name}/messages`, {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => res.json()).then(json => {\n      setMessages(json.messages);\n    });\n  };\n  const postSubmit = e => {\n    e.preventDefault();\n    if (!postTitle || !postContent) {\n      alert(\"You must provide both a title and content!\");\n      return;\n    }\n    fetch(`https://cs571.org/s23/hw6/api/chatroom/${props.name}/messages`, {\n      method: \"POST\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        title: postTitle,\n        content: postContent\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        alert(\"Successfully posted!\");\n        setPostTitle(\"\");\n        setPostContent(\"\");\n        setMessages([...messages, {\n          title: postTitle,\n          content: postContent\n        }]);\n        loadMessages();\n      }\n      return res.json();\n    });\n  };\n  useEffect(() => {\n    loadMessages();\n  }, [props.name]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.name, \" Chatroom\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: postSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Post Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter chat title\",\n            value: postTitle,\n            onChange: e => {\n              setPostTitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Post Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter chat content\",\n            value: postContent,\n            onChange: e => {\n              setPostContent(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"You must be logged in to post!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: messages.map(message => {\n        return /*#__PURE__*/_jsxDEV(BadgerMessage, {\n          id: message.id,\n          title: message.title,\n          poster: message.poster,\n          content: message.content,\n          created: message\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"There are no messages in this chatroom yet!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n_s(BadgerChatroom, \"2eymaUP8TJU0h2o4j+DecKzsKBc=\");\n_c = BadgerChatroom;\nvar _c;\n$RefreshReg$(_c, \"BadgerChatroom\");","map":{"version":3,"names":["React","useEffect","useState","useContext","BadgerMessage","isLoggedInContext","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerChatroom","props","_s","messages","setMessages","isLoggedIn","setIsLoggedIn","postTitle","setPostTitle","postContent","setPostContent","loadMessages","fetch","name","headers","then","res","json","postSubmit","e","preventDefault","alert","method","credentials","body","JSON","stringify","title","content","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","variant","length","map","message","id","poster","created","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/content/BadgerChatroom.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport BadgerMessage from \"./BadgerMessage\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default function BadgerChatroom(props) {\n  const [messages, setMessages] = useState([]);\n  const { isLoggedIn, setIsLoggedIn } = useContext(isLoggedInContext);\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n\n  const loadMessages = () => {\n    fetch(`https://cs571.org/s23/hw6/api/chatroom/${props.name}/messages`, {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setMessages(json.messages);\n      });\n  };\n\n  const postSubmit = (e) => {\n    e.preventDefault();\n\n    if (!postTitle || !postContent) {\n      alert(\"You must provide both a title and content!\");\n      return;\n    }\n\n    fetch(`https://cs571.org/s23/hw6/api/chatroom/${props.name}/messages`, {\n      method: \"POST\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n        \"Content-Type\": \"application/json\",\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        title: postTitle,\n        content: postContent,\n      }),\n    }).then((res) => {\n      if (res.status === 200) {\n        alert(\"Successfully posted!\");\n        setPostTitle(\"\");\n        setPostContent(\"\");\n        setMessages([...messages, { title: postTitle, content: postContent }]);\n        loadMessages();\n      }\n      return res.json();\n    });\n  };\n\n  useEffect(() => {\n    loadMessages();\n  }, [props.name]);\n\n  return (\n    <>\n      <h1>{props.name} Chatroom</h1>\n      {isLoggedIn ? (\n        <>\n          <Form onSubmit={postSubmit}>\n            <Form.Group>\n              <Form.Label>Post Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter chat title\"\n                value={postTitle}\n                onChange={(e) => {\n                  setPostTitle(e.target.value);\n                }}\n              />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Post Content</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter chat content\"\n                value={postContent}\n                onChange={(e) => {\n                  setPostContent(e.target.value);\n                }}\n              />\n            </Form.Group>\n          </Form>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Create Post\n          </Button>\n        </>\n      ) : (\n        <p>You must be logged in to post!</p>\n      )}\n      <hr />\n      {messages.length > 0 ? (\n        <>\n          {messages.map((message) => {\n            return (\n              <BadgerMessage\n                key={message.id}\n                id={message.id}\n                title={message.title}\n                poster={message.poster}\n                content={message.content}\n                created={message}\n              ></BadgerMessage>\n            );\n          })}\n        </>\n      ) : (\n        <>\n          <p>There are no messages in this chatroom yet!</p>\n        </>\n      )}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}