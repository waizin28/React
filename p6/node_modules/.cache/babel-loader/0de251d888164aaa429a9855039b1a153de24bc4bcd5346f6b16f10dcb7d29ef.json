{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerRegister() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n  const handleRegister = event => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n    fetch(\"https://cs571.org/s23/hw6/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        alert(\"Registration successful!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else {\n        throw new Error();\n      }\n    }).catch(e => {\n      alert(\"Username already taken!\");\n    });\n  };\n\n  // TODO Create the register component.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formUsername\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter username\",\n            value: username,\n            onChange: handleUsernameChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: handlePasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formConfirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: handleConfirmPasswordChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BadgerRegister, \"rdm1APKdkVgeD/89w0q4MU079tk=\");\n_c = BadgerRegister;\nvar _c;\n$RefreshReg$(_c, \"BadgerRegister\");","map":{"version":3,"names":["React","useEffect","useState","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerRegister","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleConfirmPasswordChange","handleRegister","alert","fetch","method","body","JSON","stringify","credentials","headers","then","res","ok","Error","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","variant","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default function BadgerRegister() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleRegister = (event) => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n\n    fetch(\"https://cs571.org/s23/hw6/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          alert(\"Registration successful!\");\n          setUsername(\"\");\n          setPassword(\"\");\n          setConfirmPassword(\"\");\n        } else {\n          throw new Error();\n        }\n      })\n      .catch((e) => {\n        alert(\"Username already taken!\");\n      });\n  };\n\n  // TODO Create the register component.\n\n  return (\n    <>\n      <h1>Register</h1>\n      <Form onSubmit={handleRegister}>\n        <div>\n          <Form.Group controlId=\"formUsername\">\n            <Form.Label>Username</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter username\"\n              value={username}\n              onChange={handleUsernameChange}\n            />\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group controlId=\"formPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={handlePasswordChange}\n            />\n          </Form.Group>\n        </div>\n        <div>\n          <Form.Group controlId=\"formConfirmPassword\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={handleConfirmPasswordChange}\n            />\n          </Form.Group>\n        </div>\n        <Button variant=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}