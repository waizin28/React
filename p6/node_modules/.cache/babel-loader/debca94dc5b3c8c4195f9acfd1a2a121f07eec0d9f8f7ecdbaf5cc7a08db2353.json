{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerRegister() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const confirmUser = () => {\n    fetch(\"https://cs571.org/s23/week6/api/tickets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        content: newContent\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        return res.json();\n      } else {\n        throw new Error();\n      }\n    }).then(json => {\n      console.log(\"Recieved back...\");\n      console.log(json);\n      alert(\"Successfully made ticket!\");\n      loadTickets();\n    }).catch(e => {\n      alert(\"An error occured while making the request\");\n    });\n  };\n\n  // TODO Create the register component.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(BadgerRegister, \"Fpn5cAAcWpQgOZdPHOH47LptfXw=\");\n_c = BadgerRegister;\nvar _c;\n$RefreshReg$(_c, \"BadgerRegister\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerRegister","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","successMessage","setSuccessMessage","confirmUser","fetch","method","headers","body","JSON","stringify","title","newTitle","content","newContent","then","res","status","json","Error","console","log","alert","loadTickets","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function BadgerRegister() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(\"\");\n\n  const confirmUser = () => {\n    fetch(\"https://cs571.org/s23/week6/api/tickets\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n      body: JSON.stringify({\n        title: newTitle,\n        content: newContent,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        } else {\n          throw new Error();\n        }\n      })\n      .then((json) => {\n        console.log(\"Recieved back...\");\n        console.log(json);\n        alert(\"Successfully made ticket!\");\n        loadTickets();\n      })\n      .catch((e) => {\n        alert(\"An error occured while making the request\");\n      });\n  };\n\n  // TODO Create the register component.\n\n  return (\n    <>\n      <h1>Register</h1>\n    </>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMiB,WAAW,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,yCAAyC,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAEC,QAAQ;QACfC,OAAO,EAAEC;MACX,CAAC;IACH,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtB,OAAOD,GAAG,CAACE,IAAI,EAAE;MACnB,CAAC,MAAM;QACL,MAAM,IAAIC,KAAK,EAAE;MACnB;IACF,CAAC,CAAC,CACDJ,IAAI,CAAEG,IAAI,IAAK;MACdE,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BD,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBI,KAAK,CAAC,2BAA2B,CAAC;MAClCC,WAAW,EAAE;IACf,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAK;MACZH,KAAK,CAAC,2CAA2C,CAAC;IACpD,CAAC,CAAC;EACN,CAAC;;EAED;;EAEA,oBACEjC,OAAA,CAAAE,SAAA;IAAAmC,QAAA,eACErC,OAAA;MAAAqC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBAChB;AAEP;AAACrC,EAAA,CA5CuBD,cAAc;AAAAuC,EAAA,GAAdvC,cAAc;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}