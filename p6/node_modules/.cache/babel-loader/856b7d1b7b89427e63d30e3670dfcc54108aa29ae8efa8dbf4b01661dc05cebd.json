{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BadgerApp() {\n  _s();\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const providerValue = useMemo(() => ({\n    isLoggedIn,\n    setIsLoggedIn\n  }), [isLoggedIn, setIsLoggedIn]);\n\n  // useEffect(() => {\n  //   fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n  //     credentials: \"include\",\n  //     headers: {\n  //       \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n  //     },\n  //   }).then((res) => {\n  //     console.log(\"Inside whoami : \" + res.status);\n  //     if (res.status === 200) {\n  //       setIsLoggedIn(true);\n  //     } else {\n  //       setIsLoggedIn(false);\n  //     }\n  //   });\n  // }, [isLoggedIn, setIsLoggedIn]);\n\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => res.json()).then(json => {\n      setChatrooms(json);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(isLoggedInContext.Provider, {\n    value: providerValue,\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(BadgerLayout, {\n            chatrooms: chatrooms\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 36\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            index: true,\n            element: /*#__PURE__*/_jsxDEV(BadgerChatHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            element: /*#__PURE__*/_jsxDEV(BadgerLogin, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(BadgerRegister, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/logout\",\n            element: /*#__PURE__*/_jsxDEV(BadgerLogout, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), chatrooms.map(chatroom => {\n            return /*#__PURE__*/_jsxDEV(Route, {\n              path: `chatrooms/${chatroom}`,\n              element: /*#__PURE__*/_jsxDEV(BadgerChatroom, {\n                name: chatroom\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 28\n              }, this)\n            }, chatroom, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"*\",\n            element: /*#__PURE__*/_jsxDEV(BadgerNoMatch, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(BadgerApp, \"bdTYD3Y1JLkP5gND7m4mqaNnxRU=\");\n_c = BadgerApp;\nexport default BadgerApp;\nvar _c;\n$RefreshReg$(_c, \"BadgerApp\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","BrowserRouter","Route","Routes","useNavigate","BadgerLayout","BadgerLogin","BadgerRegister","BadgerLogout","BadgerChatroom","BadgerChatHome","BadgerNoMatch","isLoggedInContext","jsxDEV","_jsxDEV","BadgerApp","_s","chatrooms","setChatrooms","isLoggedIn","setIsLoggedIn","providerValue","fetch","headers","then","res","json","Provider","value","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","map","chatroom","name","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\n\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\nimport isLoggedInContext from \"../../contexts/isLoggedInContext\";\n\nfunction BadgerApp() {\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const providerValue = useMemo(\n    () => ({ isLoggedIn, setIsLoggedIn }),\n    [isLoggedIn, setIsLoggedIn]\n  );\n\n  // useEffect(() => {\n  //   fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n  //     credentials: \"include\",\n  //     headers: {\n  //       \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n  //     },\n  //   }).then((res) => {\n  //     console.log(\"Inside whoami : \" + res.status);\n  //     if (res.status === 200) {\n  //       setIsLoggedIn(true);\n  //     } else {\n  //       setIsLoggedIn(false);\n  //     }\n  //   });\n  // }, [isLoggedIn, setIsLoggedIn]);\n\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setChatrooms(json);\n      });\n  }, []);\n\n  return (\n    <isLoggedInContext.Provider value={providerValue}>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<BadgerLayout chatrooms={chatrooms} />}>\n            <Route index element={<BadgerChatHome />} />\n\n            <Route path=\"/login\" element={<BadgerLogin />}></Route>\n            <Route path=\"/register\" element={<BadgerRegister />}></Route>\n\n            <Route path=\"/logout\" element={<BadgerLogout />}></Route>\n\n            {chatrooms.map((chatroom) => {\n              return (\n                <Route\n                  key={chatroom}\n                  path={`chatrooms/${chatroom}`}\n                  element={<BadgerChatroom name={chatroom} />}\n                />\n              );\n            })}\n            <Route path=\"*\" element={<BadgerNoMatch />} />\n          </Route>\n        </Routes>\n      </BrowserRouter>\n    </isLoggedInContext.Provider>\n  );\n}\n\nexport default BadgerApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}