{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerLogin.js\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerLogin() {\n  // TODO Create the login component.\n  const logIn = event => {\n    const username = event.target.elements.username.value;\n    const password = event.target.elements.password.value;\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n    const url = \"https://cs571.org/s23/hw6/api/authenticate\";\n    fetch(url, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: {\n          username\n        },\n        password: {\n          password\n        }\n      })\n    }).then(response => {\n      if (response.status === 200) {\n        alert(\"Login successful!\");\n      } else if (response.status === 404) {\n        alert(\"Incorrect username!\");\n      } else if (response.status === 401) {\n        alert(\"Incorrect password!\");\n      }\n    }).catch(error => {\n      console.error(\"Error during login: \", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formUsername\",\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPassword\",\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = BadgerLogin;\nvar _c;\n$RefreshReg$(_c, \"BadgerLogin\");","map":{"version":3,"names":["React","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerLogin","logIn","event","username","target","elements","value","password","alert","url","fetch","method","credentials","headers","body","JSON","stringify","then","response","status","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleLogin","Group","controlId","style","marginBottom","Label","Control","type","placeholder","name","variant","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerLogin.js"],"sourcesContent":["import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default function BadgerLogin() {\n  // TODO Create the login component.\n  const logIn = (event) => {\n    const username = event.target.elements.username.value;\n    const password = event.target.elements.password.value;\n\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n\n    const url = \"https://cs571.org/s23/hw6/api/authenticate\";\n    fetch(url, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: { username },\n        password: { password },\n      }),\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          alert(\"Login successful!\");\n        } else if (response.status === 404) {\n          alert(\"Incorrect username!\");\n        } else if (response.status === 401) {\n          alert(\"Incorrect password!\");\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error during login: \", error);\n      });\n  };\n\n  return (\n    <>\n      <h1>Login</h1>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"formUsername\" style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            name=\"username\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\" style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Login\n        </Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}