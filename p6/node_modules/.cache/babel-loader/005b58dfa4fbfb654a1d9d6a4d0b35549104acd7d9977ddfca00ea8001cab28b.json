{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BadgerApp() {\n  _s();\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setIsLoggedIn(true);\n      }\n    });\n  });\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\"\n      }\n    }).then(res => res.json()).then(json => {\n      setChatrooms(json);\n    });\n  }, []);\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    navigate(\"/\");\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(BadgerLayout, {\n          chatrooms: chatrooms,\n          isLoggedIn: isLoggedIn,\n          handleLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(BadgerChatHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(BadgerLogin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(BadgerRegister, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/logout\",\n          element: /*#__PURE__*/_jsxDEV(BadgerLogout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), chatrooms.map(chatroom => {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: `chatrooms/${chatroom}`,\n            element: /*#__PURE__*/_jsxDEV(BadgerChatroom, {\n              name: chatroom\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 26\n            }, this)\n          }, chatroom, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(BadgerNoMatch, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(BadgerApp, \"2FdAhA73YK3LyaoV8MR+i/IVh4s=\", false, function () {\n  return [useNavigate];\n});\n_c = BadgerApp;\nexport default BadgerApp;\nvar _c;\n$RefreshReg$(_c, \"BadgerApp\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Route","Routes","useNavigate","BadgerLayout","BadgerLogin","BadgerRegister","BadgerLogout","BadgerChatroom","BadgerChatHome","BadgerNoMatch","jsxDEV","_jsxDEV","BadgerApp","_s","chatrooms","setChatrooms","isLoggedIn","setIsLoggedIn","navigate","fetch","credentials","headers","then","res","status","json","handleLogin","handleLogout","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","map","chatroom","name","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/structural/BadgerApp.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route, Routes, useNavigate } from \"react-router-dom\";\n\nimport BadgerLayout from \"./BadgerLayout\";\nimport BadgerLogin from \"../auth/BadgerLogin\";\nimport BadgerRegister from \"../auth/BadgerRegister\";\nimport BadgerLogout from \"../auth/BadgerLogout\";\nimport BadgerChatroom from \"../content/BadgerChatroom\";\nimport BadgerChatHome from \"../content/BadgerChatHome\";\nimport BadgerNoMatch from \"../content/BadgerNoMatch\";\n\nfunction BadgerApp() {\n  const [chatrooms, setChatrooms] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch(\"https://www.cs571.org/s23/hw6/api/whoami\", {\n      credentials: \"include\",\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    }).then((res) => {\n      if (res.status === 200) {\n        setIsLoggedIn(true);\n      }\n    });\n  });\n\n  useEffect(() => {\n    fetch(\"https://cs571.org/s23/hw6/api/chatroom\", {\n      headers: {\n        \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        setChatrooms(json);\n      });\n  }, []);\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    navigate(\"/\");\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <BadgerLayout\n              chatrooms={chatrooms}\n              isLoggedIn={isLoggedIn}\n              handleLogout={handleLogout}\n            />\n          }\n        >\n          <Route index element={<BadgerChatHome />} />\n          <Route path=\"/login\" element={<BadgerLogin />}></Route>\n          <Route path=\"/register\" element={<BadgerRegister />}></Route>\n          <Route path=\"/logout\" element={<BadgerLogout />}></Route>\n          {chatrooms.map((chatroom) => {\n            return (\n              <Route\n                key={chatroom}\n                path={`chatrooms/${chatroom}`}\n                element={<BadgerChatroom name={chatroom} />}\n              />\n            );\n          })}\n          <Route path=\"*\" element={<BadgerNoMatch />} />\n        </Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default BadgerApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAE5E,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,aAAa,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMoB,QAAQ,GAAGhB,WAAW,EAAE;EAE9BL,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,0CAA0C,EAAE;MAChDC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,YAAY,EAAE;MAChB;IACF,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MACf,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBP,aAAa,CAAC,IAAI,CAAC;MACrB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACdsB,KAAK,CAAC,wCAAwC,EAAE;MAC9CE,OAAO,EAAE;QACP,YAAY,EAAE;MAChB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACE,IAAI,EAAE,CAAC,CACzBH,IAAI,CAAEG,IAAI,IAAK;MACdV,YAAY,CAACU,IAAI,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBT,aAAa,CAAC,IAAI,CAAC;IACnBC,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzBV,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACZ,aAAa;IAAA6B,QAAA,eACZjB,OAAA,CAACV,MAAM;MAAA2B,QAAA,eACLjB,OAAA,CAACX,KAAK;QACJ6B,IAAI,EAAC,GAAG;QACRC,OAAO,eACLnB,OAAA,CAACR,YAAY;UACXW,SAAS,EAAEA,SAAU;UACrBE,UAAU,EAAEA,UAAW;UACvBW,YAAY,EAAEA;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAE9B;QAAAN,QAAA,gBAEDjB,OAAA,CAACX,KAAK;UAACmC,KAAK;UAACL,OAAO,eAAEnB,OAAA,CAACH,cAAc;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC5CvB,OAAA,CAACX,KAAK;UAAC6B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEnB,OAAA,CAACP,WAAW;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACvDvB,OAAA,CAACX,KAAK;UAAC6B,IAAI,EAAC,WAAW;UAACC,OAAO,eAAEnB,OAAA,CAACN,cAAc;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC7DvB,OAAA,CAACX,KAAK;UAAC6B,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEnB,OAAA,CAACL,YAAY;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EACxDpB,SAAS,CAACsB,GAAG,CAAEC,QAAQ,IAAK;UAC3B,oBACE1B,OAAA,CAACX,KAAK;YAEJ6B,IAAI,EAAG,aAAYQ,QAAS,EAAE;YAC9BP,OAAO,eAAEnB,OAAA,CAACJ,cAAc;cAAC+B,IAAI,EAAED;YAAS;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAI,GAFvCG,QAAQ;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAGb;QAEN,CAAC,CAAC,eACFvB,OAAA,CAACX,KAAK;UAAC6B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEnB,OAAA,CAACF,aAAa;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACxC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACK;AAEpB;AAACrB,EAAA,CAvEQD,SAAS;EAAA,QAICV,WAAW;AAAA;AAAAqC,EAAA,GAJrB3B,SAAS;AAyElB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}