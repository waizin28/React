{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerRegister() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n  const handleRegister = event => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n    fetch(\"https://cs571.org/s23/hw6/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      if (res.ok) {\n        alert(\"Registration successful!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else {\n        throw new Error();\n      }\n    }).catch(e => {\n      alert(\"Username already taken!\");\n    });\n  };\n\n  // TODO Create the register component.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: handleUsernameChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange,\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BadgerRegister, \"rdm1APKdkVgeD/89w0q4MU079tk=\");\n_c = BadgerRegister;\nvar _c;\n$RefreshReg$(_c, \"BadgerRegister\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerRegister","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleUsernameChange","event","target","value","handlePasswordChange","handleConfirmPasswordChange","handleRegister","alert","fetch","method","body","JSON","stringify","credentials","headers","then","res","ok","Error","catch","e","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function BadgerRegister() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPasswordChange = (event) => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handleRegister = (event) => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n\n    fetch(\"https://cs571.org/s23/hw6/api/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ username, password }),\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          alert(\"Registration successful!\");\n          setUsername(\"\");\n          setPassword(\"\");\n          setConfirmPassword(\"\");\n        } else {\n          throw new Error();\n        }\n      })\n      .catch((e) => {\n        alert(\"Username already taken!\");\n      });\n  };\n\n  // TODO Create the register component.\n\n  return (\n    <>\n      <h1>Register</h1>\n      <div>\n        <input\n          type=\"text\"\n          value={username}\n          onChange={handleUsernameChange}\n          placeholder=\"Username\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n          placeholder=\"Password\"\n        />\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={handleConfirmPasswordChange}\n          placeholder=\"Confirm Password\"\n        />\n        <button onClick={handleRegister}>Register</button>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}