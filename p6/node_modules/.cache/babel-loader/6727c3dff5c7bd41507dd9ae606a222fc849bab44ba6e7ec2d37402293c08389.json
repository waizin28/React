{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerRegister() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const handleRegister = async () => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n    const url = \"https://cs571.org/s23/hw6/api/register\";\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: {\n            username\n          },\n          password: {\n            password\n          }\n        })\n      });\n      console.log(\"Response status\" + response.status);\n      if (response.status === 200) {\n        alert(\"Registration successful!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else if (response.status === 409) {\n        alert(\"That username has already been taken!\");\n      } else {\n        alert(\"An error occurred while registering. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while registering. Please try again later1.\");\n    }\n\n    // console.log(\"Inside handle Register\");\n\n    // const url = \"https://cs571.org/s23/hw6/api/login\";\n    // fetch(url, {\n    //   method: \"POST\",\n    //   credentials: \"include\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     username: { username },\n    //     password: { password },\n    //   }),\n    // }).then((res) => {\n    //   console.log(\"Response here\");\n    //   if (res.status === 200) {\n    //     alert(\"Registration successful!\");\n    //     setUsername(\"\");\n    //     setPassword(\"\");\n    //     setConfirmPassword(\"\");\n    //   } else if (res.status === 409) {\n    //     alert(\"That username has already been taken!\");\n    //   }\n    //   return res.json();\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BadgerRegister, \"rdm1APKdkVgeD/89w0q4MU079tk=\");\n_c = BadgerRegister;\nvar _c;\n$RefreshReg$(_c, \"BadgerRegister\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerRegister","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleRegister","alert","url","response","fetch","method","credentials","headers","body","JSON","stringify","console","log","status","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","style","marginBottom","Label","Control","type","placeholder","value","onChange","e","target","variant","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default function BadgerRegister() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleRegister = async () => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n\n    const url = \"https://cs571.org/s23/hw6/api/register\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"X-CS571-ID\": \"bid_d5f87cfbd68cea89ba78\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: { username },\n          password: { password },\n        }),\n      });\n\n      console.log(\"Response status\" + response.status);\n\n      if (response.status === 200) {\n        alert(\"Registration successful!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else if (response.status === 409) {\n        alert(\"That username has already been taken!\");\n      } else {\n        alert(\"An error occurred while registering. Please try again later.\");\n      }\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while registering. Please try again later1.\");\n    }\n\n    // console.log(\"Inside handle Register\");\n\n    // const url = \"https://cs571.org/s23/hw6/api/login\";\n    // fetch(url, {\n    //   method: \"POST\",\n    //   credentials: \"include\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({\n    //     username: { username },\n    //     password: { password },\n    //   }),\n    // }).then((res) => {\n    //   console.log(\"Response here\");\n    //   if (res.status === 200) {\n    //     alert(\"Registration successful!\");\n    //     setUsername(\"\");\n    //     setPassword(\"\");\n    //     setConfirmPassword(\"\");\n    //   } else if (res.status === 409) {\n    //     alert(\"That username has already been taken!\");\n    //   }\n    //   return res.json();\n    // });\n  };\n\n  return (\n    <>\n      <h1>Register</h1>\n      <Form onSubmit={handleRegister}>\n        <Form.Group style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}