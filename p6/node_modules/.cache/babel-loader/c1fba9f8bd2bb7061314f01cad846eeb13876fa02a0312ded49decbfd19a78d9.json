{"ast":null,"code":"var _jsxFileName = \"/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BadgerRegister() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [registrationStatus, setRegistrationStatus] = useState(\"\");\n  const handleRegister = () => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n    console.log(\"After checks\");\n    const url = \"https://cs571.org/s23/hw6/api/register\";\n    fetch(url, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username: {\n          username\n        },\n        password: {\n          password\n        }\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        setRegistrationStatus(\"success\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else if (res.status === 409) {\n        setRegistrationStatus(\"usernameTaken\");\n      }\n    });\n  };\n  useEffect(() => {\n    if (registrationStatus === \"success\") {\n      alert(\"Registration successful!\");\n    } else if (registrationStatus === \"usernameTaken\") {\n      alert(\"That username has already been taken!\");\n    }\n  }, [registrationStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formUsername\",\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formPassword\",\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formConfirmPassword\",\n        style: {\n          marginBottom: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BadgerRegister, \"qYX505XoSaZAzJpWKYbE5sE0zHA=\");\n_c = BadgerRegister;\nvar _c;\n$RefreshReg$(_c, \"BadgerRegister\");","map":{"version":3,"names":["React","useState","useEffect","Form","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","BadgerRegister","_s","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","registrationStatus","setRegistrationStatus","handleRegister","alert","console","log","url","fetch","method","credentials","headers","body","JSON","stringify","then","res","status","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","style","marginBottom","Label","Control","type","placeholder","value","onChange","e","target","variant","_c","$RefreshReg$"],"sources":["/Users/waizinlinn/Desktop/Spring/React/HW/hw6/hw6-waizin28/src/components/auth/BadgerRegister.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\n\nexport default function BadgerRegister() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [registrationStatus, setRegistrationStatus] = useState(\"\");\n\n  const handleRegister = () => {\n    if (!username || !password) {\n      alert(\"You must provide both a username and password!\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Your passwords do not match!\");\n      return;\n    }\n\n    console.log(\"After checks\");\n\n    const url = \"https://cs571.org/s23/hw6/api/register\";\n    fetch(url, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        username: { username },\n        password: { password },\n      }),\n    }).then((res) => {\n      if (res.status === 200) {\n        setRegistrationStatus(\"success\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else if (res.status === 409) {\n        setRegistrationStatus(\"usernameTaken\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (registrationStatus === \"success\") {\n      alert(\"Registration successful!\");\n    } else if (registrationStatus === \"usernameTaken\") {\n      alert(\"That username has already been taken!\");\n    }\n  }, [registrationStatus]);\n\n  return (\n    <>\n      <h1>Register</h1>\n      <Form onSubmit={handleRegister}>\n        <Form.Group controlId=\"formUsername\" style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formPassword\" style={{ marginBottom: \"1rem\" }}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group\n          controlId=\"formConfirmPassword\"\n          style={{ marginBottom: \"1rem\" }}\n        >\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}